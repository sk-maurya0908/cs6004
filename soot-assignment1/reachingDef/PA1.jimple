-public class PA1 extends java.lang.Object
{
/*PA1.java*/
    int f1;
    int f2;

    public void <init>()
    {
        PA1 r0;

        r0 := @this: PA1;

        specialinvoke r0.<java.lang.Object: void <init>()>();
/*r0 has reaching def: r0 := @this: PA1*/

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        return;
    }

    public static void tc1printSum()
    {
        int i2, $i3;
        java.lang.StringBuilder $r0, $r2, $r3;
        java.io.PrintStream $r1, $r5;
        java.lang.String $r4;

        i2 = 10 + 20;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
/*$r0 has reaching def: $r0 = new java.lang.StringBuilder*/

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Test case 1! Sum is ");
/*$r0 has reaching def: $r0 = new java.lang.StringBuilder*/

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
/*i2 has reaching def: i2 = 10 + 20*/
/*$r2 has reaching def: $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Test case 1! Sum is ")*/

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
/*$r3 has reaching def: $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)*/

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r4);
/*$r4 has reaching def: $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()*/
/*$r1 has reaching def: $r1 = <java.lang.System: java.io.PrintStream out>*/

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $i3 = 10 + 20;

        virtualinvoke $r5.<java.io.PrintStream: void println(int)>($i3);
/*$i3 has reaching def: $i3 = 10 + 20*/
/*$r5 has reaching def: $r5 = <java.lang.System: java.io.PrintStream out>*/

        return;
    }

    public static int tc2max(int, int, int)
    {
        int i0, i1, i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 <= i1 goto label3;
/*i0 has reaching def: i0 := @parameter0: int*/
/*i1 has reaching def: i1 := @parameter1: int*/

        if i0 <= i2 goto label1;
/*i0 has reaching def: i0 := @parameter0: int*/
/*i2 has reaching def: i2 := @parameter2: int*/

        $i3 = i0;
/*i0 has reaching def: i0 := @parameter0: int*/

        goto label2;

     label1:
        $i3 = i2;
/*i2 has reaching def: i2 := @parameter2: int*/

     label2:
        return $i3;
/*$i3 has reaching def: $i3 = i0*/
/*$i3 has reaching def: $i3 = i2*/

     label3:
        if i1 <= i2 goto label4;
/*i1 has reaching def: i1 := @parameter1: int*/
/*i2 has reaching def: i2 := @parameter2: int*/

        $i4 = i1;
/*i1 has reaching def: i1 := @parameter1: int*/

        goto label5;

     label4:
        $i4 = i2;
/*i2 has reaching def: i2 := @parameter2: int*/

     label5:
        return $i4;
/*$i4 has reaching def: $i4 = i1*/
/*$i4 has reaching def: $i4 = i2*/
    }

    public static void tc3loop(int)
    {
        int i0, $i1, $i2, i3;
        java.io.PrintStream $r0, $r1;

        i0 := @parameter0: int;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;
/*i3 has reaching def: i3 = 0*/
/*i3 has reaching def: i3 = i3 + 1*/
/*i0 has reaching def: i0 := @parameter0: int*/

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $i2 = i3 * 2;
/*i3 has reaching def: i3 = 0*/
/*i3 has reaching def: i3 = i3 + 1*/

        virtualinvoke $r1.<java.io.PrintStream: void println(int)>($i2);
/*$i2 has reaching def: $i2 = i3 * 2*/
/*$r1 has reaching def: $r1 = <java.lang.System: java.io.PrintStream out>*/

        i3 = i3 + 1;
/*i3 has reaching def: i3 = 0*/
/*i3 has reaching def: i3 = i3 + 1*/

        goto label1;

     label2:
        $r0 = <java.lang.System: java.io.PrintStream out>;

        $i1 = i3 * 2;
/*i3 has reaching def: i3 = 0*/
/*i3 has reaching def: i3 = i3 + 1*/

        virtualinvoke $r0.<java.io.PrintStream: void println(int)>($i1);
/*$i1 has reaching def: $i1 = i3 * 2*/
/*$r0 has reaching def: $r0 = <java.lang.System: java.io.PrintStream out>*/

        return;
    }

    public static void tc4array(int)
    {
        int i0, i1, i2, $i3, i4;
        int[] r0;
        java.io.PrintStream $r2;

        i0 := @parameter0: int;

        r0 = newarray (int)[i0];
/*i0 has reaching def: i0 := @parameter0: int*/

        i1 = lengthof r0;
/*r0 has reaching def: r0 = newarray (int)[i0]*/

        i4 = 0;

     label1:
        if i4 >= i1 goto label2;
/*i4 has reaching def: i4 = 0*/
/*i4 has reaching def: i4 = i4 + 1*/
/*i1 has reaching def: i1 = lengthof r0*/

        i2 = r0[i4];
/*r0 has reaching def: r0 = newarray (int)[i0]*/
/*i4 has reaching def: i4 = 0*/
/*i4 has reaching def: i4 = i4 + 1*/

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $i3 = r0[i2];
/*r0 has reaching def: r0 = newarray (int)[i0]*/
/*i2 has reaching def: i2 = r0[i4]*/

        virtualinvoke $r2.<java.io.PrintStream: void println(int)>($i3);
/*$i3 has reaching def: $i3 = r0[i2]*/
/*$r2 has reaching def: $r2 = <java.lang.System: java.io.PrintStream out>*/

        i4 = i4 + 1;
/*i4 has reaching def: i4 = 0*/
/*i4 has reaching def: i4 = i4 + 1*/

        goto label1;

     label2:
        return;
    }

    public int tc5recursion(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5;
        PA1 r0;

        r0 := @this: PA1;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;
/*i0 has reaching def: i0 := @parameter0: int*/

        return 1;

     label1:
        $i1 = i0 - 1;
/*i0 has reaching def: i0 := @parameter0: int*/

        $i2 = virtualinvoke r0.<PA1: int tc5recursion(int)>($i1);
/*$i1 has reaching def: $i1 = i0 - 1*/
/*r0 has reaching def: r0 := @this: PA1*/

        $i3 = i0 - 2;
/*i0 has reaching def: i0 := @parameter0: int*/

        $i4 = virtualinvoke r0.<PA1: int tc5recursion(int)>($i3);
/*$i3 has reaching def: $i3 = i0 - 2*/
/*r0 has reaching def: r0 := @this: PA1*/

        $i5 = $i2 + $i4;
/*$i2 has reaching def: $i2 = virtualinvoke r0.<PA1: int tc5recursion(int)>($i1)*/
/*$i4 has reaching def: $i4 = virtualinvoke r0.<PA1: int tc5recursion(int)>($i3)*/

        return $i5;
/*$i5 has reaching def: $i5 = $i2 + $i4*/
    }
}
