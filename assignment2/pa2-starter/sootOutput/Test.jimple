public class Test extends java.lang.Object
{
    public static Node global;

    public void <init>()
    {
        Test r0;

        r0 := @this: Test;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r1;

        r1 := @parameter0: java.lang.String[];

        staticinvoke <Test: Node foo()>();

        return;
    }

    public static Node foo()
    {
        Node $r0, $r2, $r3, $r4, $r5, $r7, $r9, $r10;

        $r0 = new Node;

        specialinvoke $r0.<Node: void <init>()>();

        $r2 = new Node;

        specialinvoke $r2.<Node: void <init>()>();

        $r0.<Node: Node f> = $r2;

        $r4 = $r0.<Node: Node f>;

        $r3 = new Node;

        specialinvoke $r3.<Node: void <init>()>();

        $r4.<Node: Node g> = $r3;

        $r5 = new Node;

        specialinvoke $r5.<Node: void <init>()>();

        $r7 = new Node;

        specialinvoke $r7.<Node: void <init>()>();

        $r5.<Node: Node f> = $r7;

        $r9 = $r0.<Node: Node f>;

        staticinvoke <Test: void bar(Node,Node)>($r9, $r5);

        $r10 = $r5.<Node: Node f>;

        return $r10;
    }

    public static void bar(Node, Node)
    {
        Node $r0, r2, $r3, $r4, r5, $r6;

        r2 := @parameter0: Node;

        r5 := @parameter1: Node;

        $r0 = new Node;

        specialinvoke $r0.<Node: void <init>()>();

        $r3 = <Test: Node global>;

        $r3.<Node: Node g> = r2;

        $r4 = new Node;

        specialinvoke $r4.<Node: void <init>()>();

        $r0.<Node: Node f> = $r4;

        $r6 = $r0.<Node: Node f>;

        r5.<Node: Node f> = $r6;

        return;
    }

    static void <clinit>()
    {
        Node $r0;

        $r0 = new Node;

        specialinvoke $r0.<Node: void <init>()>();

        <Test: Node global> = $r0;

        return;
    }
}
